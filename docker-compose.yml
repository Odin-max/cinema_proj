services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_DB_PORT}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"

  web:
    build: .
    container_name: cinema_web
    env_file:
      - .env
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB_PORT: 5432
      DATABASE_URL: >-
        postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - mailhog

  celery_worker:
    build: .
    container_name: cinema_celery_worker
    env_file:
      - .env
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB_PORT: 5432
      DATABASE_URL: >-
        postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/1
    command: >
      celery -A app.celery_app worker
      -E --pool=solo --loglevel=info
      -Q celery,maintenance
    depends_on:
      - redis
      - postgres

  celery_beat:
    build: .
    container_name: cinema_celery_beat
    env_file:
      - .env
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB_PORT: 5432
      DATABASE_URL: >-
        postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/1
    command: celery -A app.celery_app beat --loglevel=info
    depends_on:
      - redis
      - postgres

volumes:
  db_data: