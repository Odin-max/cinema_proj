name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - "5432:5432"
      redis:
        image: redis:7-alpine
        ports:
          - "6379:6379"

    env:
      POSTGRES_USER:     ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB:       ${{ secrets.POSTGRES_DB }}
      POSTGRES_HOST:     localhost
      POSTGRES_DB_PORT:  5432
      DATABASE_URL: >-
        postgresql+asyncpg://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/${{ secrets.POSTGRES_DB }}
      CELERY_BROKER_URL:    redis://localhost:6379/0
      CELERY_RESULT_BACKEND: redis://localhost:6379/1
      SECRET_KEY_ACCESS:    ${{ secrets.SECRET_KEY_ACCESS }}
      SECRET_KEY_REFRESH:   ${{ secrets.SECRET_KEY_REFRESH }}
      JWT_SIGNING_ALGORITHM: HS256
      EMAIL_HOST:      localhost
      EMAIL_PORT:      1025
      EMAIL_HOST_USER: noreply@localhost
      EMAIL_USE_TLS:   "False"
      BACKEND_URL:     http://localhost:8000
      STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_PUBLISHABLE_KEY }}
      STRIPE_SECRET_KEY:      ${{ secrets.STRIPE_SECRET_KEY }}
      STRIPE_WEBHOOK_SECRET:  ${{ secrets.STRIPE_WEBHOOK_SECRET }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install Poetry
        run: python -m pip install --upgrade pip poetry

      - name: Install deps (incl. dev)
        run: poetry install --no-root --with dev

      - name: Run DB migrations
        env:
          PYTHONPATH: src
        run: |
          poetry run alembic upgrade head

      - name: Run tests
        env:
          PYTHONPATH: src
        run: |
          poetry run pytest --maxfail=1 --disable-warnings -q

      - name: Check formatting with Black
        env:
          PYTHONPATH: src
        run: |
          poetry run black --check src

      - name: Check type hints with MyPy
        env:
          PYTHONPATH: src
        run: |
          poetry run mypy src/app

